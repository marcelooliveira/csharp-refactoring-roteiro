 C# - Refactorings Parte I: Composing methods, Moving Features between Objects:  
 - Extrair Método (Extract Method), 
 - Colocar Método em Linha (Inline Method), 
 - Extrair Variável (Extract Variable), 
 - Colocar Variável em Linha (Inline Temp), 
 - Substituir Variável por Consulta (Replace Temp with Query), 
 - Quebrar Variável Temporária em Duas (Split Temporary Variable), 
 - Remover Atribuição a Parâmetros (Remove Assignments to Parameters), 
 - Substituir Método por Objeto de Método (Replace Method with Method Object), 
 - Substituir Algoritmo (Substitute Algorithm),
 - Mover Método (Move Method), 
 - Mover Campo (Move Field), 
 - Extrair Classe (Extract Class), 
 - Colocar Classe em Linha (Inline Class), 
 - Esconder Delegado (Hide Delegate), 
 - Remover o Intermediário (Remove Middle Man), 
 - Introduzir Método Externo (Introduce Foreign Method), 
 - Introduzir Extensão Local (Introduce Local Extension)

C# Refactorings Parte II: Organizing Data, Simplifying Conditional Expressions: 
 - Substituir Valor de Dados por Objeto (Replace Data Value with Object), 
 - Mudar Valor para Referência (Change Value to Reference), 
 - Mudar Referência para Valor (Change Reference to Value), 
 - Substituir Array por Objeto (Replace Array with Object), 
 - Duplicar Dados Observados (Duplicate Observed Data), 
 - Mudar Associação de Uni para Bidirecional (Change Unidirectional Association to Bidirectional), 
 - Mudar Associação de Bi para Unidirecional (Change Bidirectional Association to Unidirectional), 
 - Substituir Número Mágico por Constante (Replace Magic Number with Symbolic Constant), 
 - Encapsular Campo (Encapsulate Field),
 - Encapsular Coleção (Encapsulate Collection), 
 - Substituir Código de Tipo por Classe (Replace Type Code with Class), 
 - Substituir Código de Tipo por Subclasse (Replace Type Code with Subclasses), 
 - Substituir Código de Tipo por State/Strategy (Replace Type Code with State/Strategy), 
 - Substituir Subclasse por Campos (Replace Subclass with Fields), 
 - Decompor Condição (Decompose Conditional), 
 - Consolidar Expressão Condicional (Consolidate Conditional Expression), 
 - Consolidar Fragmentos Condicionais Duplicados (Consolidate Duplicate Conditional Fragments), 
 - Remover Sinal de Controle (Remove Control Flag), 
 - Substituir Condições Aninhadas com Cláusulas de Guarda (Replace Nested Conditional with Guard Clauses), 
 - Substituir Condição por Polimorfismo (Replace Conditional with Polymorphism), 
 - Introduzir Objeto Null (Introduce Null Object), 
 - Introduzir Asserção (Introduce Assertion)

C# Refactorings Parte III: Simplifying Method Calls, Dealing with Generalisation: 
 - Renomear Método (Rename Method)
 - Adicionar Parâmetro (Add Parameter), 
 - Remover Parâmetro (Remove Parameter), 
 - Separar Consulta do Modificador (Separate Query from Modifier), 
 - Parametrizar Método (Parameterize Method), 
 - Substituir Parâmetro por Métodos Explícitos (Replace Parameter with Explicit Methods), 
 - Preservar Objeto Inteiro (Preserve Whole Object), 
 - Substituir Parâmetro por Chamada a Método (Replace Parameter with Method Call), 
 - Introduzir Objeto-Parâmetro (Introduce Parameter Object), 
 - Remover Método de Configuração (Remove Setting Method), 
 - Ocultar Método (Hide Method), 
 - Substituir Construtor por Factory Method (Replace Constructor with Factory Method), 
 - Substituir Código de Erro por Exception (Replace Error Code with Exception), 
 - Substituir Exceção por Teste (Replace Exception with Test), 
 - Subir Campo (Pull Up Field), 
 - Subir Método (Pull Up Method), 
 - Subir Corpo do Construtor (Pull Up Constructor Body), 
 - Descer Método (Push Down Method), 
 - Descer Campo (Push Down Field), 
 - Extrair Subclasse (Extract Subclass), 
 - Extrair Superclasse (Extract Superclass), 
 - Extrair Interface (Extract Interface), 
 - Colapsar Hierarquia (Collapse Hierarchy),
 - Formar Template Method (Form Template Method), 
 - Substituir Herança por Delegação (Replace Inheritance with Delegation), 
 - Substituir Delegação por Herança (Replace Delegation with Inheritance)
